     0  *ast.File {
     1  .  Package: 1:1
     2  .  Name: *ast.Ident {
     3  .  .  NamePos: 1:9
     4  .  .  Name: "main"
     5  .  }
     6  .  Decls: []ast.Decl (len = 2) {
     7  .  .  0: *ast.GenDecl {
     8  .  .  .  TokPos: 3:2
     9  .  .  .  Tok: import
    10  .  .  .  Lparen: -
    11  .  .  .  Specs: []ast.Spec (len = 1) {
    12  .  .  .  .  0: *ast.ImportSpec {
    13  .  .  .  .  .  Path: *ast.BasicLit {
    14  .  .  .  .  .  .  ValuePos: 3:9
    15  .  .  .  .  .  .  Kind: STRING
    16  .  .  .  .  .  .  Value: "\"log\""
    17  .  .  .  .  .  }
    18  .  .  .  .  .  EndPos: -
    19  .  .  .  .  }
    20  .  .  .  }
    21  .  .  .  Rparen: -
    22  .  .  }
    23  .  .  1: *ast.FuncDecl {
    24  .  .  .  Name: *ast.Ident {
    25  .  .  .  .  NamePos: 5:7
    26  .  .  .  .  Name: "main"
    27  .  .  .  .  Obj: *ast.Object {
    28  .  .  .  .  .  Kind: func
    29  .  .  .  .  .  Name: "main"
    30  .  .  .  .  .  Decl: *(obj @ 23)
    31  .  .  .  .  }
    32  .  .  .  }
    33  .  .  .  Type: *ast.FuncType {
    34  .  .  .  .  Func: 5:2
    35  .  .  .  .  Params: *ast.FieldList {
    36  .  .  .  .  .  Opening: 5:11
    37  .  .  .  .  .  Closing: 5:12
    38  .  .  .  .  }
    39  .  .  .  }
    40  .  .  .  Body: *ast.BlockStmt {
    41  .  .  .  .  Lbrace: 5:14
    42  .  .  .  .  List: []ast.Stmt (len = 3) {
    43  .  .  .  .  .  0: *ast.AssignStmt {
    44  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
    45  .  .  .  .  .  .  .  0: *ast.Ident {
    46  .  .  .  .  .  .  .  .  NamePos: 6:3
    47  .  .  .  .  .  .  .  .  Name: "int_val"
    48  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    49  .  .  .  .  .  .  .  .  .  Kind: var
    50  .  .  .  .  .  .  .  .  .  Name: "int_val"
    51  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 43)
    52  .  .  .  .  .  .  .  .  }
    53  .  .  .  .  .  .  .  }
    54  .  .  .  .  .  .  }
    55  .  .  .  .  .  .  TokPos: 6:11
    56  .  .  .  .  .  .  Tok: :=
    57  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
    58  .  .  .  .  .  .  .  0: *ast.BasicLit {
    59  .  .  .  .  .  .  .  .  ValuePos: 6:14
    60  .  .  .  .  .  .  .  .  Kind: INT
    61  .  .  .  .  .  .  .  .  Value: "4"
    62  .  .  .  .  .  .  .  }
    63  .  .  .  .  .  .  }
    64  .  .  .  .  .  }
    65  .  .  .  .  .  1: *ast.AssignStmt {
    66  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
    67  .  .  .  .  .  .  .  0: *ast.Ident {
    68  .  .  .  .  .  .  .  .  NamePos: 7:3
    69  .  .  .  .  .  .  .  .  Name: "arr_val"
    70  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    71  .  .  .  .  .  .  .  .  .  Kind: var
    72  .  .  .  .  .  .  .  .  .  Name: "arr_val"
    73  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 65)
    74  .  .  .  .  .  .  .  .  }
    75  .  .  .  .  .  .  .  }
    76  .  .  .  .  .  .  }
    77  .  .  .  .  .  .  TokPos: 7:11
    78  .  .  .  .  .  .  Tok: :=
    79  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
    80  .  .  .  .  .  .  .  0: *ast.CompositeLit {
    81  .  .  .  .  .  .  .  .  Type: *ast.ArrayType {
    82  .  .  .  .  .  .  .  .  .  Lbrack: 7:14
    83  .  .  .  .  .  .  .  .  .  Len: *ast.Ellipsis {
    84  .  .  .  .  .  .  .  .  .  .  Ellipsis: 7:15
    85  .  .  .  .  .  .  .  .  .  }
    86  .  .  .  .  .  .  .  .  .  Elt: *ast.Ident {
    87  .  .  .  .  .  .  .  .  .  .  NamePos: 7:19
    88  .  .  .  .  .  .  .  .  .  .  Name: "int"
    89  .  .  .  .  .  .  .  .  .  }
    90  .  .  .  .  .  .  .  .  }
    91  .  .  .  .  .  .  .  .  Lbrace: 7:22
    92  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 3) {
    93  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
    94  .  .  .  .  .  .  .  .  .  .  ValuePos: 7:23
    95  .  .  .  .  .  .  .  .  .  .  Kind: INT
    96  .  .  .  .  .  .  .  .  .  .  Value: "1"
    97  .  .  .  .  .  .  .  .  .  }
    98  .  .  .  .  .  .  .  .  .  1: *ast.BasicLit {
    99  .  .  .  .  .  .  .  .  .  .  ValuePos: 7:26
   100  .  .  .  .  .  .  .  .  .  .  Kind: INT
   101  .  .  .  .  .  .  .  .  .  .  Value: "2"
   102  .  .  .  .  .  .  .  .  .  }
   103  .  .  .  .  .  .  .  .  .  2: *ast.BasicLit {
   104  .  .  .  .  .  .  .  .  .  .  ValuePos: 7:29
   105  .  .  .  .  .  .  .  .  .  .  Kind: INT
   106  .  .  .  .  .  .  .  .  .  .  Value: "3"
   107  .  .  .  .  .  .  .  .  .  }
   108  .  .  .  .  .  .  .  .  }
   109  .  .  .  .  .  .  .  .  Rbrace: 7:30
   110  .  .  .  .  .  .  .  .  Incomplete: false
   111  .  .  .  .  .  .  .  }
   112  .  .  .  .  .  .  }
   113  .  .  .  .  .  }
   114  .  .  .  .  .  2: *ast.ExprStmt {
   115  .  .  .  .  .  .  X: *ast.CallExpr {
   116  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   117  .  .  .  .  .  .  .  .  X: *ast.Ident {
   118  .  .  .  .  .  .  .  .  .  NamePos: 8:3
   119  .  .  .  .  .  .  .  .  .  Name: "log"
   120  .  .  .  .  .  .  .  .  }
   121  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   122  .  .  .  .  .  .  .  .  .  NamePos: 8:7
   123  .  .  .  .  .  .  .  .  .  Name: "Println"
   124  .  .  .  .  .  .  .  .  }
   125  .  .  .  .  .  .  .  }
   126  .  .  .  .  .  .  .  Lparen: 8:14
   127  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   128  .  .  .  .  .  .  .  .  0: *ast.SliceExpr {
   129  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   130  .  .  .  .  .  .  .  .  .  .  NamePos: 8:15
   131  .  .  .  .  .  .  .  .  .  .  Name: "arr_val"
   132  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 70)
   133  .  .  .  .  .  .  .  .  .  }
   134  .  .  .  .  .  .  .  .  .  Lbrack: 8:22
   135  .  .  .  .  .  .  .  .  .  Low: *ast.BasicLit {
   136  .  .  .  .  .  .  .  .  .  .  ValuePos: 8:23
   137  .  .  .  .  .  .  .  .  .  .  Kind: INT
   138  .  .  .  .  .  .  .  .  .  .  Value: "0"
   139  .  .  .  .  .  .  .  .  .  }
   140  .  .  .  .  .  .  .  .  .  High: *ast.Ident {
   141  .  .  .  .  .  .  .  .  .  .  NamePos: 8:25
   142  .  .  .  .  .  .  .  .  .  .  Name: "int_val"
   143  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 48)
   144  .  .  .  .  .  .  .  .  .  }
   145  .  .  .  .  .  .  .  .  .  Slice3: false
   146  .  .  .  .  .  .  .  .  .  Rbrack: 8:32
   147  .  .  .  .  .  .  .  .  }
   148  .  .  .  .  .  .  .  }
   149  .  .  .  .  .  .  .  Ellipsis: -
   150  .  .  .  .  .  .  .  Rparen: 8:33
   151  .  .  .  .  .  .  }
   152  .  .  .  .  .  }
   153  .  .  .  .  }
   154  .  .  .  .  Rbrace: 9:2
   155  .  .  .  }
   156  .  .  }
   157  .  }
   158  .  Scope: *ast.Scope {
   159  .  .  Objects: map[string]*ast.Object (len = 1) {
   160  .  .  .  "main": *(obj @ 27)
   161  .  .  }
   162  .  }
   163  .  Imports: []*ast.ImportSpec (len = 1) {
   164  .  .  0: *(obj @ 12)
   165  .  }
   166  .  Unresolved: []*ast.Ident (len = 2) {
   167  .  .  0: *(obj @ 86)
   168  .  .  1: *(obj @ 117)
   169  .  }
   170  }
