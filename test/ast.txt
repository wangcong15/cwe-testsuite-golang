     0  *ast.File {
     1  .  Package: 1:1
     2  .  Name: *ast.Ident {
     3  .  .  NamePos: 1:9
     4  .  .  Name: "main"
     5  .  }
     6  .  Decls: []ast.Decl (len = 3) {
     7  .  .  0: *ast.GenDecl {
     8  .  .  .  TokPos: 3:2
     9  .  .  .  Tok: import
    10  .  .  .  Lparen: 3:9
    11  .  .  .  Specs: []ast.Spec (len = 1) {
    12  .  .  .  .  0: *ast.ImportSpec {
    13  .  .  .  .  .  Path: *ast.BasicLit {
    14  .  .  .  .  .  .  ValuePos: 4:3
    15  .  .  .  .  .  .  Kind: STRING
    16  .  .  .  .  .  .  Value: "\"log\""
    17  .  .  .  .  .  }
    18  .  .  .  .  .  EndPos: -
    19  .  .  .  .  }
    20  .  .  .  }
    21  .  .  .  Rparen: 5:2
    22  .  .  }
    23  .  .  1: *ast.FuncDecl {
    24  .  .  .  Name: *ast.Ident {
    25  .  .  .  .  NamePos: 7:7
    26  .  .  .  .  Name: "unTrustFunc"
    27  .  .  .  .  Obj: *ast.Object {
    28  .  .  .  .  .  Kind: func
    29  .  .  .  .  .  Name: "unTrustFunc"
    30  .  .  .  .  .  Decl: *(obj @ 23)
    31  .  .  .  .  }
    32  .  .  .  }
    33  .  .  .  Type: *ast.FuncType {
    34  .  .  .  .  Func: 7:2
    35  .  .  .  .  Params: *ast.FieldList {
    36  .  .  .  .  .  Opening: 7:18
    37  .  .  .  .  .  Closing: 7:19
    38  .  .  .  .  }
    39  .  .  .  .  Results: *ast.FieldList {
    40  .  .  .  .  .  Opening: -
    41  .  .  .  .  .  List: []*ast.Field (len = 1) {
    42  .  .  .  .  .  .  0: *ast.Field {
    43  .  .  .  .  .  .  .  Type: *ast.Ident {
    44  .  .  .  .  .  .  .  .  NamePos: 7:21
    45  .  .  .  .  .  .  .  .  Name: "int"
    46  .  .  .  .  .  .  .  }
    47  .  .  .  .  .  .  }
    48  .  .  .  .  .  }
    49  .  .  .  .  .  Closing: -
    50  .  .  .  .  }
    51  .  .  .  }
    52  .  .  .  Body: *ast.BlockStmt {
    53  .  .  .  .  Lbrace: 7:25
    54  .  .  .  .  List: []ast.Stmt (len = 1) {
    55  .  .  .  .  .  0: *ast.ReturnStmt {
    56  .  .  .  .  .  .  Return: 8:3
    57  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
    58  .  .  .  .  .  .  .  0: *ast.BasicLit {
    59  .  .  .  .  .  .  .  .  ValuePos: 8:10
    60  .  .  .  .  .  .  .  .  Kind: INT
    61  .  .  .  .  .  .  .  .  Value: "0"
    62  .  .  .  .  .  .  .  }
    63  .  .  .  .  .  .  }
    64  .  .  .  .  .  }
    65  .  .  .  .  }
    66  .  .  .  .  Rbrace: 9:2
    67  .  .  .  }
    68  .  .  }
    69  .  .  2: *ast.FuncDecl {
    70  .  .  .  Name: *ast.Ident {
    71  .  .  .  .  NamePos: 11:7
    72  .  .  .  .  Name: "main"
    73  .  .  .  .  Obj: *ast.Object {
    74  .  .  .  .  .  Kind: func
    75  .  .  .  .  .  Name: "main"
    76  .  .  .  .  .  Decl: *(obj @ 69)
    77  .  .  .  .  }
    78  .  .  .  }
    79  .  .  .  Type: *ast.FuncType {
    80  .  .  .  .  Func: 11:2
    81  .  .  .  .  Params: *ast.FieldList {
    82  .  .  .  .  .  Opening: 11:11
    83  .  .  .  .  .  Closing: 11:12
    84  .  .  .  .  }
    85  .  .  .  }
    86  .  .  .  Body: *ast.BlockStmt {
    87  .  .  .  .  Lbrace: 11:14
    88  .  .  .  .  List: []ast.Stmt (len = 3) {
    89  .  .  .  .  .  0: *ast.DeclStmt {
    90  .  .  .  .  .  .  Decl: *ast.GenDecl {
    91  .  .  .  .  .  .  .  TokPos: 12:3
    92  .  .  .  .  .  .  .  Tok: var
    93  .  .  .  .  .  .  .  Lparen: -
    94  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
    95  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
    96  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    97  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    98  .  .  .  .  .  .  .  .  .  .  .  NamePos: 12:7
    99  .  .  .  .  .  .  .  .  .  .  .  Name: "intVal"
   100  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   101  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   102  .  .  .  .  .  .  .  .  .  .  .  .  Name: "intVal"
   103  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 95)
   104  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
   105  .  .  .  .  .  .  .  .  .  .  .  }
   106  .  .  .  .  .  .  .  .  .  .  }
   107  .  .  .  .  .  .  .  .  .  }
   108  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   109  .  .  .  .  .  .  .  .  .  .  NamePos: 12:14
   110  .  .  .  .  .  .  .  .  .  .  Name: "int"
   111  .  .  .  .  .  .  .  .  .  }
   112  .  .  .  .  .  .  .  .  .  Values: []ast.Expr (len = 1) {
   113  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   114  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
   115  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 12:20
   116  .  .  .  .  .  .  .  .  .  .  .  .  Name: "unTrustFunc"
   117  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 27)
   118  .  .  .  .  .  .  .  .  .  .  .  }
   119  .  .  .  .  .  .  .  .  .  .  .  Lparen: 12:31
   120  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   121  .  .  .  .  .  .  .  .  .  .  .  Rparen: 12:32
   122  .  .  .  .  .  .  .  .  .  .  }
   123  .  .  .  .  .  .  .  .  .  }
   124  .  .  .  .  .  .  .  .  }
   125  .  .  .  .  .  .  .  }
   126  .  .  .  .  .  .  .  Rparen: -
   127  .  .  .  .  .  .  }
   128  .  .  .  .  .  }
   129  .  .  .  .  .  1: *ast.AssignStmt {
   130  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   131  .  .  .  .  .  .  .  0: *ast.Ident {
   132  .  .  .  .  .  .  .  .  NamePos: 13:3
   133  .  .  .  .  .  .  .  .  Name: "intVal"
   134  .  .  .  .  .  .  .  .  Obj: *(obj @ 100)
   135  .  .  .  .  .  .  .  }
   136  .  .  .  .  .  .  }
   137  .  .  .  .  .  .  TokPos: 13:10
   138  .  .  .  .  .  .  Tok: =
   139  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   140  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
   141  .  .  .  .  .  .  .  .  X: *ast.BasicLit {
   142  .  .  .  .  .  .  .  .  .  ValuePos: 13:12
   143  .  .  .  .  .  .  .  .  .  Kind: INT
   144  .  .  .  .  .  .  .  .  .  Value: "5"
   145  .  .  .  .  .  .  .  .  }
   146  .  .  .  .  .  .  .  .  OpPos: 13:14
   147  .  .  .  .  .  .  .  .  Op: /
   148  .  .  .  .  .  .  .  .  Y: *ast.Ident {
   149  .  .  .  .  .  .  .  .  .  NamePos: 13:16
   150  .  .  .  .  .  .  .  .  .  Name: "intVal"
   151  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 100)
   152  .  .  .  .  .  .  .  .  }
   153  .  .  .  .  .  .  .  }
   154  .  .  .  .  .  .  }
   155  .  .  .  .  .  }
   156  .  .  .  .  .  2: *ast.ExprStmt {
   157  .  .  .  .  .  .  X: *ast.CallExpr {
   158  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   159  .  .  .  .  .  .  .  .  X: *ast.Ident {
   160  .  .  .  .  .  .  .  .  .  NamePos: 14:3
   161  .  .  .  .  .  .  .  .  .  Name: "log"
   162  .  .  .  .  .  .  .  .  }
   163  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   164  .  .  .  .  .  .  .  .  .  NamePos: 14:7
   165  .  .  .  .  .  .  .  .  .  Name: "Println"
   166  .  .  .  .  .  .  .  .  }
   167  .  .  .  .  .  .  .  }
   168  .  .  .  .  .  .  .  Lparen: 14:14
   169  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   170  .  .  .  .  .  .  .  .  0: *ast.Ident {
   171  .  .  .  .  .  .  .  .  .  NamePos: 14:15
   172  .  .  .  .  .  .  .  .  .  Name: "intVal"
   173  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 100)
   174  .  .  .  .  .  .  .  .  }
   175  .  .  .  .  .  .  .  }
   176  .  .  .  .  .  .  .  Ellipsis: -
   177  .  .  .  .  .  .  .  Rparen: 14:21
   178  .  .  .  .  .  .  }
   179  .  .  .  .  .  }
   180  .  .  .  .  }
   181  .  .  .  .  Rbrace: 15:2
   182  .  .  .  }
   183  .  .  }
   184  .  }
   185  .  Scope: *ast.Scope {
   186  .  .  Objects: map[string]*ast.Object (len = 2) {
   187  .  .  .  "unTrustFunc": *(obj @ 27)
   188  .  .  .  "main": *(obj @ 73)
   189  .  .  }
   190  .  }
   191  .  Imports: []*ast.ImportSpec (len = 1) {
   192  .  .  0: *(obj @ 12)
   193  .  }
   194  .  Unresolved: []*ast.Ident (len = 3) {
   195  .  .  0: *(obj @ 43)
   196  .  .  1: *(obj @ 108)
   197  .  .  2: *(obj @ 159)
   198  .  }
   199  }
